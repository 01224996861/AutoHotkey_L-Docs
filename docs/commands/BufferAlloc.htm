<!DOCTYPE HTML>
<html lang="en">
<head>
<title>BufferAlloc - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The BufferAlloc function allocates a block of memory and returns it within a Buffer object." />
<meta name="ahk:equiv-v1" content="commands/VarSetCapacity.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>BufferAlloc</h1>

<p>Allocates a block of memory and returns it within a <a href="../objects/Buffer.htm">Buffer</a> object.</p>

<pre class="Syntax">Buffer := <span class="func">BufferAlloc</span>(ByteCount <span class="optional">, FillByte</span>)</pre>
<h2>Parameters</h2>
<dl>
  <dt>ByteCount</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>The number of bytes to allocate. Corresponds to <a href="../objects/Buffer.htm#Size">Buffer.Size</a>.</p>
  </dd>
  <dt>FillByte</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Specify a number between 0 and 255 to set each byte in the buffer to that number.</p>
    <p>This should generally be omitted in cases where the buffer will be written into without first being read, as it has a time-cost proportionate to the number of bytes. If omitted, the memory of the buffer is not initialized; the value of each byte is arbitrary.</p>
  </dd>
</dl>

<h2>Return Value</h2>
<p>The return value is a new <a href="../objects/Buffer.htm">Buffer</a> object.</p>

<h2>Remarks</h2>
<p>An exception is thrown if the memory could not be allocated, such as if <em>ByteCount</em> is unexpectedly large or the system is low on virtual memory.</p>

<h2 id="Related">Related</h2>
<p><a href="../objects/Buffer.htm">Buffer object</a>, <a href="DllCall.htm">DllCall</a>, <a href="NumPut.htm">NumPut</a>, <a href="NumGet.htm">NumGet</a>, <a href="StrPut.htm">StrPut</a>, <a href="StrGet.htm">StrGet</a>, <a href="../objects/File.htm#RawRead">File.RawRead</a>, <a href="../objects/File.htm#RawWrite">File.RawWrite</a></p>

</body>
</html>
