<!DOCTYPE HTML>
<html>
<head>
<title>ControlGetChoice</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGetChoice</h1>

<p>Returns the name of the currently selected entry in a ListBox or ComboBox.</p>

<pre class="Syntax">Choice := <span class="func">ControlGetChoice</span>(<span class="optional">Control, WinTitle, WinText, ExcludeTitle, ExcludeText</span>)</pre>

<h3>Parameters</h3>
<dl>
    <dt>Control</dt>
    <dd>
        <p>Can be either ClassNN (the classname and instance number of the control) or the control's text, both of which can be determined via Window Spy. When using text, the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. If this parameter is blank, the target window's topmost control will be used.</p>
        <p>To operate upon a control's HWND (window handle), leave the <em>Control</em> parameter blank and specify <code>"ahk_id " ControlHwnd</code> for the <em>WinTitle</em> parameter (this also works on hidden controls even when <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> is Off). The HWND of a control is typically retrieved via <a href="Control.htm#GetHwnd">ControlGetHwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, or <a href="DllCall.htm">DllCall</a>.</p>
    </dd>
    <dt>WinTitle</dt>
    <dd>A window title or other criteria identifying the target window. See <a href="../misc/WinTitle.htm">WinTitle</a>.</dd>
    <dt>WinText</dt>
    <dd>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</dd>
    <dt>ExcludeTitle</dt>
    <dd>Windows whose titles include this value will not be considered.</dd>
    <dt>ExcludeText</dt>
    <dd>Windows whose text include this value will not be considered.</dd>
</dl>

<h3>Return Value</h3>
<p>This function returns a string representing the name of the currently selected entry in a ListBox or ComboBox.</p>

<h3>Error Handling</h3>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there was a problem or 0 otherwise.</p>
<p>An <a href="Catch.htm#RuntimeErrors">exception</a> is thrown if invalid parameters are detected.</p>

<h3>Remarks</h3>
<p>To instead retrieve the position of the selected item, follow this example (use only one of the first two lines):</p>
<pre>ChoicePos := <a href="PostMessage.htm">SendMessage</a>(0x188, 0, 0, "ListBox1", WinTitle)  <em>; 0x188 is LB_GETCURSEL (for a ListBox).</em>
ChoicePos := <a href="PostMessage.htm">SendMessage</a>(0x147, 0, 0, "ComboBox1", WinTitle)  <em>; 0x147 is CB_GETCURSEL (for a DropDownList or ComboBox).</em>
ChoicePos += 1  <em>; Convert from 0-based to 1-based, i.e. so that the first item is known as 1, not 0.
; ChoicePos is now 0 if there is no item selected.</em></pre>
<p>To discover the ClassNN or HWND of the control that the mouse is currently hovering over, use <a href="MouseGetPos.htm">MouseGetPos</a>.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h3>Related</h3>
<p><a href="ControlChoose.htm">ControlChoose</a>, <a href="ControlChooseString.htm">ControlChooseString</a>, <a href="../objects/GuiControl.htm#Value">Value property (GuiControl object)</a>, <a href="../objects/GuiControl.htm#Choose">Choose method (GuiControl object)</a></p>

</body>
</html>
