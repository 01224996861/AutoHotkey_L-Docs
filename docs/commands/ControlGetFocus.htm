<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>ControlGetFocus</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/commands.css" rel="stylesheet" type="text/css">
<link href="../css/print.css" rel="stylesheet" type="text/css" media="print">
</head>
<body>

<h1>ControlGetFocus</h1>
<hr size="2">
<p>Retrieves which control of the target window has input focus, if any.</p>

<p class="CommandSyntax">ControlGetFocus, OutputVar [, WinTitle, WinText, ExcludeTitle, ExcludeText]</p>
<h4>Parameters</h4>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr> 
    <td width="15%">OutputVar</td>
    <td width="85%"><p>The name of the variable in which to store the identifier of the control, which consists of its classname followed by its sequence number within its parent window, e.g. Button12. </p>    </td>
  </tr>
  <tr>
    <td>WinTitle</td>
    <td>The title or partial title of the target window (the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>). If this and the next 3 parameters are omitted, the <a href="../LastFoundWindow.htm">Last Found Window</a> will be used. If this is the letter A and the next 3 parameters are omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a <a href="Process.htm">process identifier (PID)</a>, specify ahk_pid %VarContainingPID%. To use a <a href="GroupAdd.htm">window group</a>, specify ahk_group GroupName. To use a window's <a href="WinGet.htm">unique ID number</a>, specify ahk_id %VarContainingID%. The search can be narrowed by specifying <a href="../LastFoundWindow.htm#multi">multiple criteria</a>. For example: <em>My File.txt ahk_class Notepad</em></td>
  </tr>
  <tr>
    <td>WinText</td>
    <td>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</td>
  </tr>
  <tr>
    <td>ExcludeTitle</td>
    <td>Windows whose titles include this value will not be considered.</td>
  </tr>
  <tr>
    <td>ExcludeText</td>
    <td>Windows whose text include this value will not be considered.</td>
  </tr>
</table>

<h4>ErrorLevel</h4>
<p> <a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 0 if the control with input focus was successfully retrieved. Otherwise (e.g. the target window doesn't exist or none of its controls have input focus) it will be set to 1.</p>
<h4>Remarks</h4>
<p>The control retrieved by this command is the one that has keyboard focus, that is, the one that would receive keystrokes if the user were to type any.</p>
<p>The target window must be active to have a focused control. If the window is not active, <em>OutputVar</em> will be made blank.</p>
<p>If ControlGetFocus is executed repeatedly at a high frequency (i.e. every 500 ms or faster), it will probably disrupt the user's ability to double-click. One workaround is to call the OS's GetGUIThreadInfo() via <a href="DllCall.htm">DllCall</a>. For example:</p>
<pre><span class="CodeCom">; This script retrieves the ahk_id (HWND) of the active window's focused control.</span>
<span class="CodeCom">; This script requires Windows 98, NT 4.0 SP3+, or any OS more recent than those.</span>
GuiThreadInfoSize = 48
VarSetCapacity(GuiThreadInfo, GuiThreadInfoSize)
<a href="../Functions.htm#NumPut">NumPut</a>(GuiThreadInfoSize, GuiThreadInfo, 0)
if not DllCall(&quot;GetGUIThreadInfo&quot;, uint, 0, str, GuiThreadInfo)
{
    MsgBox GetGUIThreadInfo() indicated a failure.
    return
}
FocusedHWND := <a href="../Functions.htm#NumGet">NumGet</a>(GuiThreadInfo, 12)  <span class="CodeCom">; Retrieve the hwndFocus field from the struct.</span>
MsgBox % &quot;The focused control's ahk_id (HWND) is &quot; . FocusedHWND
<span class="CodeCom">; This ID can be used all control commands.  For example:</span>
<span class="CodeCom">; ControlGetText, OutputVar,, ahk_id %FocusedHWND%</span></pre>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>
<h4>Related</h4>
<p><a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="ControlGetText.htm">ControlGetText</a>, <a href="ControlSetText.htm">ControlSetText</a>, <a href="ControlSend.htm">ControlSend</a> </p>
<h4>Example</h4>
<pre class="NoIndent">ControlGetFocus, OutputVar, Untitled - Notepad
if ErrorLevel
    MsgBox, The target window doesn't exist or none of its controls has input focus.
else
    MsgBox, Control with focus = %OutputVar%</pre>

</body>
</html>
