<!DOCTYPE HTML>
<html lang="en">
<head>
<title>ControlGetLine - Syntax &amp; Usage | AutoHotkey</title>
<meta name="description" content="The ControlGetLine function returns the text of the specified line in an Edit control." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGetLine</h1>

<p>Returns the text of the specified line in an Edit control.</p>

<pre class="Syntax">Line := <span class="func">ControlGetLine</span>(N <span class="optional">, Control, WinTitle, WinText, ExcludeTitle, ExcludeText</span>)</pre>

<h3>Parameters</h3>
<dl>
    <dt>N</dt>
    <dd>The line number. Line 1 is the first line.</dd>
    <dt>Control</dt>
    <dd>
        <p>Can be either ClassNN (the classname and instance number of the control) or the control's text, both of which can be determined via Window Spy. When using text, the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. If this parameter is blank, the target window's topmost control will be used.</p>
        <p>To operate upon a control's HWND (window handle), leave the <em>Control</em> parameter blank and specify <code>"ahk_id " ControlHwnd</code> for the <em>WinTitle</em> parameter (this also works on hidden controls even when <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> is Off). The HWND of a control is typically retrieved via <a href="ControlGetHwnd.htm">ControlGetHwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a>, or <a href="DllCall.htm">DllCall</a>.</p>
    </dd>
    <dt>WinTitle</dt>
    <dd>A window title or other criteria identifying the target window. See <a href="../misc/WinTitle.htm">WinTitle</a>.</dd>
    <dt>WinText</dt>
    <dd>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</dd>
    <dt>ExcludeTitle</dt>
    <dd>Windows whose titles include this value will not be considered.</dd>
    <dt>ExcludeText</dt>
    <dd>Windows whose text include this value will not be considered.</dd>
</dl>

<h3>Return Value</h3>
<p>This function returns a string representing the text of line <em>N</em> in an Edit control. Depending on the nature of the control, the return value might end in a carriage return (`r) or a carriage return + linefeed (`r`n).</p>

<h3>Error Handling</h3>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there was a problem or 0 otherwise.</p>
<p>An <a href="Catch.htm#RuntimeErrors">exception</a> is thrown if <em>N</em> negative or not a number, or any other parameter is invalid.</p>

<h3>Remarks</h3>
<p>To discover the ClassNN or HWND of the control that the mouse is currently hovering over, use <a href="MouseGetPos.htm">MouseGetPos</a>.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h3>Related</h3>
<p><a href="ControlGetCurrentCol.htm">ControlGetCurrentCol</a>, <a href="ControlGetCurrentLine.htm">ControlGetCurrentLine</a>, <a href="ControlGetLineCount.htm">ControlGetLineCount</a>, <a href="ControlGetSelected.htm">ControlGetSelected</a>, <a href="ControlEditPaste.htm">ControlEditPaste</a>, <a href="Control.htm">Control functions</a></p>

<h3>Examples</h3>

<h4 id="ex1">Example #1</h4>
<p>Retrieves the first line of the Notepad's Edit control:</p>
<pre class="NoIndent">line1 := ControlGetLine(1, "Edit1", "ahk_class Notepad")</pre>

</body>
</html>
