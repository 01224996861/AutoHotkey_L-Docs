<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>FileMove</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/commands.css" rel="stylesheet" type="text/css">
<link href="../css/print.css" rel="stylesheet" type="text/css" media="print">
</head>
<body>

<h1>FileMove</h1>
<hr size="2">
<p>Moves or renames one or more files.</p>

<p class="CommandSyntax">FileMove, SourcePattern, DestPattern [, Flag]</p>
<h4>Parameters</h4>
<table width="100%" border="1" cellpadding="3" cellspacing="0" bordercolor="#C0C0C0">
  <tr>
    <td>SourcePattern</td>
    <td>The name of a single file or a wildcard pattern such as C:\Temp\*.tmp. <em>SourcePattern </em>is assumed to be in <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a> if an absolute path isn't specified.</td>
  </tr>
  <tr>
    <td>DestPattern</td>
    <td>The name or pattern of the  destination, which is assumed to be in <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a> if an absolute path isn't specified.  To perform a simple move -- retaining the existing file name(s) -- specify only the folder name as shown in these functionally identical examples:<br>
FileMove, C:\*.txt, C:\My Folder<br>
FileMove, C:\*.txt, C:\My Folder\*.*</td>
  </tr>
  <tr>
    <td width="15%">Flag</td>
    <td width="85%"><p>(optional) this flag determines whether to overwrite files if they already exist:</p>
      <p>0 = (default) do not overwrite existing files<br>
        1 = overwrite existing files</p>
      <p>This parameter can be an <a href="../Variables.htm#Expressions">expression</a>, even one that evalutes to true or false (since true and false are stored internally as 1 and 0).</p></td>
  </tr>
</table>
<h4>ErrorLevel</h4>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to the number of files that could not be moved due to an error, or 0 otherwise. However, if the source file is a single file (no wildcards) and it does not exist, ErrorLevel is set to 0. To detect this condition, use <a href="IfExist.htm">IfExist</a> or <a href="../Functions.htm#FileExist">FileExist()</a> on the source file prior to moving it.</p>
<p>Unlike <a href="FileCopy.htm">FileCopy</a>, moving a file onto itself is always considered successful, even if the overwrite mode is not in effect.</p>
<h4>Remarks</h4>
<p> FileMove moves files only. To instead move the contents of a folder (all its files and subfolders), see the examples section below. To move or rename a single folder, use <a href="FileMoveDir.htm">FileMoveDir</a>.</p>
<p>The operation will continue even if error(s) are encountered.</p>
<p>Although this command is capable of moving files to a different volume, the operation will take longer than a same-volume move. This is because a same-volume move is similar to a rename, and therefore much faster.</p>
<h4>Related</h4>
<p><a href="FileCopy.htm">FileCopy</a>, <a href="FileCopyDir.htm">FileCopyDir</a>, <a href="FileMoveDir.htm">FileMoveDir</a>, <a href="FileDelete.htm">FileDelete</a></p>
<h4>Examples</h4>
<pre class="NoIndent">FileMove, C:\My Documents\List1.txt, D:\Main Backup\  <span class="CodeCom">; Move the file without renaming it.</span>
FileMove, C:\File Before.txt, C:\File After.txt  <span class="CodeCom">; Rename a single file.</span>
FileMove, C:\Folder1\*.txt, D:\New Folder\*.bkp  <span class="CodeCom">; Move and rename files to a new extension.</span></pre>
<p>&nbsp;</p>
<pre class="NoIndent"><span class="CodeCom">; The following example moves all files and folders inside a folder to a different folder:</span>
ErrorCount := MoveFilesAndFolders(&quot;C:\My Folder\*.*&quot;, &quot;D:\Folder to receive all files &amp; folders&quot;)
if ErrorCount &lt;&gt; 0
    MsgBox %ErrorCount% files/folders could not be moved.

MoveFilesAndFolders(SourcePattern, DestinationFolder, DoOverwrite = false)
<span class="CodeCom">; Moves all files and folders matching SourcePattern into the folder named DestinationFolder and</span>
<span class="CodeCom">; returns the number of files/folders that could not be moved. This function requires v1.0.38+</span>
<span class="CodeCom">; because it uses FileMoveDir's mode 2.</span>
{
    if DoOverwrite = 1
        DoOverwrite = 2  <span class="CodeCom">; See <a href="FileMoveDir.htm">FileMoveDir</a> for description of mode 2 vs. 1.</span>
    <span class="CodeCom">; First move all the files (but not the folders):</span>
    FileMove, %SourcePattern%, %DestinationFolder%, %DoOverwrite%
    ErrorCount := ErrorLevel
    <span class="CodeCom">; Now move all the folders:</span>
    Loop, %SourcePattern%, 2  <span class="CodeCom">; 2 means &quot;retrieve folders only&quot;.</span>
    {
        FileMoveDir, %A_LoopFileFullPath%, %DestinationFolder%\%A_LoopFileName%, %DoOverwrite%
        ErrorCount += ErrorLevel
        if ErrorLevel  <span class="CodeCom">; Report each problem folder by name.</span>
            MsgBox Could not move %A_LoopFileFullPath% into %DestinationFolder%.
    }
    return ErrorCount
}</pre>

</body>
</html>
