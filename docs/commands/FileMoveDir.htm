<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>FileMoveDir</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/commands.css" rel="stylesheet" type="text/css">
<link href="../css/print.css" rel="stylesheet" type="text/css" media="print">
</head>
<body>

<h1>FileMoveDir</h1>
<hr size="2">
<p>Moves a folder along with all its sub-folders and files. It can also rename a folder.</p>

<p class="CommandSyntax">FileMoveDir, Source, Dest [, Flag]</p>
<h4>Parameters</h4>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr> 
    <td>Source</td>
    <td> Name of the source directory (with no trailing backslash), which is assumed to be in <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a> if an absolute path isn't specified. For example: C:\My Folder </td>
  </tr>
  <tr> 
    <td>Dest</td>
    <td> The new path and name of the directory (with no trailing baskslash), which is assumed to be in <a href="../Variables.htm#WorkingDir">%A_WorkingDir%</a> if an absolute path isn't specified. For example: D:\My Folder. <strong>Note</strong>: <em>Dest</em> is the actual path and name that the directory will have after it is moved; it is <em>not</em> the directory into which <em>Source</em> is moved (except for the known limitation mentioned below). </td>
  </tr>
  <tr> 
    <td width="15%">Flag</td>
    <td width="85%"><p>(options) Specify one of the following single characters:</p>
      <p><strong>0</strong> (default): Do not overwrite existing files. The operation will fail if <em>Dest</em> already exists as a file or directory.</p>
      <p><strong>1</strong>: Overwrite existing files. However, any files or subfolders inside <em>Dest</em> that do not have a counterpart in <em>Source </em>will not be deleted. <strong>Known limitation: </strong>If <em>Dest</em> already exists as a folder and it is on the same volume as <em>Source</em>, <em>Source</em> will be moved into it rather than overwriting it. To avoid this, see the next option.</p>
      <p><strong>2</strong>: The same as mode 1 above except that the limitation is absent.</p>      
      <p><strong>R</strong>: Rename the directory rather than moving it. Although renaming normally has the same effect as moving, it is helpful in cases where you want &quot;all or none&quot; behavior; that is, when you don't want the operation to be only partially successful when <em>Source</em> or one of its files is locked (in use). Although this method cannot move <em>Source</em> onto a different volume, it can move it to any other directory on its own volume. The operation will fail if <em>Dest</em> already exists as a file or directory.</p></td>
  </tr>
</table>

<h4>ErrorLevel</h4>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there was a problem or 0 otherwise.</p>
<h4>Remarks</h4>
<p> FileMoveDir moves a single folder to a new location. To instead move the contents of a folder (all its files and subfolders), see the examples section of <a href="FileMove.htm">FileMove</a>.</p>
<p>If the source and destination are on different volumes or UNC paths, a copy/delete operation will be performed rather than a move.</p>
<h4>Related</h4>
<p><a href="FileCopyDir.htm">FileCopyDir</a>, <a href="FileCopy.htm">FileCopy</a>, <a href="FileMove.htm">FileMove</a>, <a href="FileDelete.htm">FileDelete</a>, <a href="LoopFile.htm">File-loops</a>, <a href="FileSelectFolder.htm">FileSelectFolder</a>, <a href="SplitPath.htm">SplitPath</a></p>
<h4>Example</h4>
<pre class="NoIndent">FileMoveDir, C:\My Folder, D:\My Folder  <span class="CodeCom">; Move to a new drive. </span>
FileMoveDir, C:\My Folder, C:\My Folder (renamed), R  <span class="CodeCom">; Simple rename</span>.
FileMoveDir, C:\My Folder, C:\New Location\My Folder, R  <span class="CodeCom">; Folders can be &quot;renamed into&quot; another location as long as it's on the same volume.</span></pre>

</body>
</html>
