<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>StatusbarGetText</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/commands.css" rel="stylesheet" type="text/css">
<link href="../css/print.css" rel="stylesheet" type="text/css" media="print">
</head>
<body>

<h1>StatusBarGetText</h1>
<hr size="2">
<p>Retrieves the text from a standard status bar control. </p>

<p class="CommandSyntax">StatusBarGetText, OutputVar [, Part#, WinTitle, WinText, ExcludeTitle, ExcludeText]</p>
<h4>Parameters</h4>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr>
    <td>OutputVar</td>
    <td>The name of the variable in which to store the retrieved text. </td>
  </tr>
  <tr>
    <td>Part#</td>
    <td>Which part number of the bar to retrieve, which can be an <a href="../Variables.htm#Expressions">expression</a>. Default 1, which is usually the part that contains the text of interest.</td>
  </tr>
  <tr>
    <td width="15%">WinTitle</td>
    <td width="85%">The title or partial title of the target window (the matching behavior is determined by <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>). If this and the other 3 window parameters are blank or omitted, the <a href="../LastFoundWindow.htm">Last Found Window</a> will be used. If this is the letter A and the other 3 window parameters are blank or omitted, the active window will be used. To use a window class, specify ahk_class ExactClassName (shown by Window Spy). To use a <a href="Process.htm">process identifier (PID)</a>, specify ahk_pid %VarContainingPID%. To use a <a href="GroupAdd.htm">window group</a>, specify ahk_group GroupName. To use a window's <a href="WinGet.htm">unique ID number</a>, specify ahk_id %VarContainingID%. The search can be narrowed by specifying <a href="../LastFoundWindow.htm#multi">multiple criteria</a>. For example: <em>My File.txt ahk_class Notepad</em></td>
  </tr>
  <tr>
    <td>WinText</td>
    <td>If present, this parameter must be a substring from a single text element of the target window (as revealed by the included Window Spy utility). Hidden text elements are detected if <a href="DetectHiddenText.htm">DetectHiddenText</a> is ON.</td>
  </tr>
  <tr>
    <td>ExcludeTitle</td>
    <td>Windows whose titles include this value will not be considered.</td>
  </tr>
  <tr>
    <td>ExcludeText</td>
    <td>Windows whose text include this value will not be considered.</td>
  </tr>
</table>

<h4>ErrorLevel</h4>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there is a problem or 0 otherwise. If there was a problem, <em>OutputVar</em> is also made blank.</p>
<h4>Remarks</h4>
<p>This command attempts to read the first <em>standard</em> status bar on a window (Microsoft common control: msctls_statusbar32).&nbsp; Some programs use their own status bars or special versions of the MS common control, in which case the text cannot be retrieved.</p>
<p>Rather than using this command in a loop, it is usually more efficient to use <a href="StatusBarWait.htm">StatusBarWait, </a>which contains optimizations that avoid the overhead of repeated calls to StatusBarGetText.</p>
<p>Window titles and text are case sensitive. Hidden windows are not detected unless <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> has been turned on.</p>

<h4>Related</h4>
<p><a href="StatusBarWait.htm">StatusBarWait</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a> </p>
<h4>Example</h4>
<pre class="NoIndent">StatusBarGetText, RetrievedText, 1, Search Results
IfInString, RetrievedText, found, MsgBox, Search results have been found.</pre>

</body>
</html>
