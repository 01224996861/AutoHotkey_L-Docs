<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Thread</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/commands.css" rel="stylesheet" type="text/css">
<link href="../css/print.css" rel="stylesheet" type="text/css" media="print">
</head>
<body>

<h1>Thread</h1>
<hr size="2">
<p>Sets the priority or interruptibility of <a href="../misc/Threads.htm">threads</a>. It can also temporarily disable all <a href="SetTimer.htm">timers</a>.</p>

<p class="CommandSyntax">Thread, NoTimers [, false] <br>
      Thread, Priority, n<br>
      Thread, Interrupt [, Duration, LineCount]</p>
<p><br>
<strong>Thread, NoTimers [, false]</strong>: Prevents interruptions from any <a href="SetTimer.htm">timers</a> until the <a href="../misc/Threads.htm">current thread</a> either ends, executes &quot;<em>Thread, NoTimers, false</em>&quot;, or is interrupted by another thread that allows timers (in which case timers can interrupt the interrupting thread until it finishes).</p>
<p>If &quot;<em>Thread NoTimers</em>&quot; is not used in the auto-execute section (top part of the script), all threads start off as interruptible by timers (though the settings of &quot;Thread Interrupt&quot; [below] will still apply). By contrast, if the auto-execute section turns on <em>NoTimers</em> but never turns it off, every newly launched <a href="../misc/Threads.htm">thread</a> (such as a <a href="../Hotkeys.htm">hotkey</a>, <a href="Menu.htm">custom menu item</a>, or <a href="SetTimer.htm">timer</a>) starts off immune to interruptions by timers.</p>
<p>Regardless of the default setting, timers will always operate when the script has no threads (unless <a href="Pause.htm">Pause</a> has been turned on).</p>
<p>&quot;<em>Thread, NoTimers</em>&quot; is equivalent to &quot;<em>Thread, NoTimers, true</em>&quot;. In addition, since the true/false parameter is an <a href="../Variables.htm#Expressions">expression</a>, true resolves to 1, and false to 0.</p>
<p><strong><br>
    <a name="Priority"></a>Thread, Priority, n</strong>: Specify for <strong>n</strong> an integer between -2147483648 and 2147483647 (or an <a href="../Variables.htm#Expressions">expression</a>) to indicate the current thread's new priority. This has no effect on other threads. See <a href="../misc/Threads.htm">Threads</a> for details.</p>
<p>Due to its ability to buffer events, the command <a href="Critical.htm">&quot;Critical&quot;</a> is generally superior to &quot;Thread Priority&quot;.</p>
<p>On a related note, the OS's priority level for the entire script can be changed as in this example: <a href="Process.htm"><em>Process</em></a><em>, Priority,, High</em></p>
<p><strong><br>
Thread, Interrupt [, Duration, LineCount]</strong>: This command should be used sparingly because most scripts perform more consistently with settings close to the defaults.</p>
<p>By default, every newly launched thread is uninterruptible for a <em>Duration</em> of 15 milliseconds or a <em>LineCount</em> of 1000 script lines, whichever comes first. This gives the thread a chance to finish rather than  being immediately interrupted by another thread that is waiting to launch (such as a buffered <a href="../Hotkeys.htm">hotkey</a> or a series of <a href="SetTimer.htm">timed subroutines</a> that are all due to be run).</p>
<p>If either component is 0, each newly launched thread is immediately interruptible. If either component is -1, the thread cannot be interrupted as a result of that component. The maximum for both components is 2147483647.</p>
<p>The Interrupt setting is global, meaning that all subsequent threads will obey it, even if the setting is changed somewhere other than the <a href="../Scripts.htm#auto">auto-execute section</a>. However,<a href="../misc/Threads.htm"> interrupted threads</a> are unaffected because their period of uninterrutibility has already expired. Similarly, the <a href="../misc/Threads.htm">current thread</a> is unaffected except if it is uninterruptible at the time the <em>LineCount</em> component is changed, in which case the new <em>LineCount</em> will be in effect for it.</p>
<p>If a <a href="../Hotkeys.htm">hotkey</a> is pressed or a <a href="Menu.htm">custom menu item</a> is selected while the <a href="../misc/Threads.htm">current thread</a> is uninterruptible, that event will be buffered. In other words, it will launch when the current thread finishes or becomes interruptible, whichever comes first. The exception to this is when the current thread becomes interruptible before it finishes, and it is of higher <a href="#Priority">priority</a> than the buffered event; in this case the buffered event is unbuffered and discarded.</p>
<p>Regardless of this setting, a thread will become interruptible the moment it displays a <a href="MsgBox.htm">MsgBox</a>, <a href="InputBox.htm">InputBox</a>, <a href="FileSelectFile.htm">FileSelectFile</a>, or <a href="FileSelectFolder.htm">FileSelectFolder</a> dialog. </p>
<p>Either parameter can be left blank to avoid changing it.</p>
<h4>Remarks</h4>
<p>Due to its greater flexibilty and its ability to buffer events, the command <a href="Critical.htm">&quot;Critical&quot;</a> is generally more useful than &quot;Thread Interrupt&quot; and &quot;Thread Priority&quot;.</p>
<h4>Related</h4>
<p><a href="Critical.htm">Critical</a>, <a href="../misc/Threads.htm">Threads</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="Menu.htm">Menu</a>, <a href="SetTimer.htm">SetTimer</a>, <a href="Process.htm">Process</a> </p>
<h4>Example</h4>
<pre class="NoIndent">Thread, priority, 1 <span class="CodeCom">; Make priority of current thread slightly above average.</span>
Thread, interrupt, 0  <span class="CodeCom">; Make each newly launched thread immediately interruptible:</span>
Thread, interrupt, 50, 2000  <span class="CodeCom">; Make each thread interruptible after 50ms or 2000 lines, whichever comes first.</span></pre>

</body>
</html>
