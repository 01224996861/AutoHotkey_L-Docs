<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Throw</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/default.css" rel="stylesheet" type="text/css">
</head>
<body>

<h1>Throw <span class="ver">[v1.1.04+]</span></h1>

<p>Indicates AutoHotkey that an error has been detected. This error can be caught using the <code><a href="Try.htm">try</a>/<a href="Catch.htm">catch</a></code> structure.</p>

<pre class="Syntax">Throw, Expression</pre>
<h3>Parameters</h3>
<table class="info">
  <tr>
    <td width="15%">Expression</td>
    <td width="85%"><p>This parameter contains an expression whose result will be stored in a <a href="Catch.htm"><code>catch</code></a>'s OutputVar.</p>
      <p>Since this parameter is an <a href="../Variables.htm#Expressions">expression</a>, all of the following are valid examples:</p>
<pre>throw 3
throw &quot;literal string&quot;
throw MyVar
throw i + 1
throw { what: &quot;Custom error&quot;, file: A_LineFile, line: A_LineNumber } <em>; Throws an <a href="../objects/Object.htm">object</a></em></pre>
<p>Unlike <a href="Return.htm"><code>return</code></a>, <strong>this parameter is always an expression</strong>, i.e. <code>throw %MyVar%</code> would retrieve the contents of <code>MyVar</code>, interpret them as a variable name and throw the contents of said variable.</p></td>
  </tr>
</table>

<h3>Related</h3>
<p><a href="Try.htm">Try</a>, <a href="Catch.htm">Catch</a></p>
<h3>Examples</h3>
<pre class="NoIndent"><em>; This example is very trivial, but still shows the basic concept of try/catch/throw</em>

<a href="Try.htm">try</a> <em>; Indicates that AutoHotkey should attempt to execute the code below.</em>
{
    HelloWorld()
    MakeToast()
}<a href="Catch.htm">catch</a> e <em>; Provides an error handler for the try block above.</em>
{
    MsgBox, An exception was thrown!`nSpecifically: %e%
    <a href="Exit.htm">Exit</a>
}

<em>; This function always succeeds</em>
HelloWorld()
{
    MsgBox, Hello, world!
}

<em>; This function always fails</em>
MakeToast()
{
    throw A_ThisFunc &quot; is not implemented, sorry&quot; <em>; This instructs AutoHotkey to stop executing and jump to the most recently executed try block's error handler</em>
}</pre>

</body>
</html>
