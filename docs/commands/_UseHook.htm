<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>#UseHook</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link href="../css/commands.css" rel="stylesheet" type="text/css">
<link href="../css/print.css" rel="stylesheet" type="text/css" media="print">
</head>
<body>

<h1>#UseHook</h1>
<hr size="2">
<p>Forces the use of the  hook to implement all or some keyboard <a href="../Hotkeys.htm">hotkeys</a>.</p>

<p class="CommandSyntax">#UseHook [On|Off]</p>
<h4>Parameters</h4>
<table border="1" width="100%" cellspacing="0" cellpadding="3" bordercolor="#C0C0C0">
  <tr> 
    <td width="15%">On|Off</td>
    <td width="85%"><p>#UseHook without one of the following words after it is equivalent to <em>#UseHook On</em>.</p>
      <p>On: The <a href="_InstallKeybdHook.htm">keyboard hook</a> will be used to implement all keyboard hotkeys between here and the next <em>#UseHook OFF</em>  (if any).</p>
    <p>Off: Hotkeys will be implemented using the default method (RegisterHotkey() if possible; otherwise, the keyboard hook).</p></td>
  </tr>
</table>

<h4>Remarks</h4>
<p>Normally, the windows API function RegisterHotkey() is used to implement a keyboard hotkey whenever possible. However, the responsiveness of hotkeys might be better under some conditions if the <a href="_InstallKeybdHook.htm">keyboard hook</a> is used instead.</p>
<p>Turning this directive ON is equivalent to using the <a href="../Hotkeys.htm#prefixdollar">$ prefix</a> in the definition of each affected hotkey. The exception to this is Windows 95/98/Me, upon which #UseHook is ignored (though the <a href="../Hotkeys.htm#prefixdollar">$ prefix</a> works in a limited fashion).</p>
<p> As with all # directives -- which are processed only once when the script is launched --  <em>#UseHook</em> should not be positioned in the script as though it were a command (that is, it is not necessary to have it contained within a subroutine). Instead, position it immediately before the first hotkey label you wish to have affected by it.</p>
<p>Hotkeys that use the <a href="_InstallKeybdHook.htm">keyboard hook</a> cannot be triggered by means of the <a href="Send.htm">Send command</a>. Similarly, mouse hotkeys cannot be triggered by commands such as <a href="Click.htm">Click</a> because all mouse hotkeys use the <a href="_InstallMouseHook.htm">mouse hook</a>. To work around this, use <a href="Gosub.htm">Gosub</a> to jump directly to the hotkey's subroutine. For example: Gosub #LButton</p>
<p>If this directive does not appear in the script at all, it will behave as though set to OFF.</p>
<h4>Related</h4>
<p><a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_InstallMouseHook.htm">#InstallMouseHook</a>, <a href="ListHotkeys.htm">ListHotkeys</a> </p>
<h4>Example</h4>
<pre class="NoIndent">#UseHook  <span class="CodeCom">; Force the use of the hook for hotkeys after this point. </span>
#x::MsgBox, This hotkey will be implemented with the hook.
#y::MsgBox, And this one too.
#UseHook off
#z::MsgBox, But not this one.</pre>

</body>
</html>
