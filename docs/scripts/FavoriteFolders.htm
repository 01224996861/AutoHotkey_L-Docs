<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Easy Access to Favorite Folders -- by Savage</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="alternate" type="application/rss+xml" title="AutoHotkey Forum RSS" href="/forum/rss.php">
<link href="/docs/css/default.css" rel="stylesheet" type="text/css">
<link href="/docs/css/print.css" rel="stylesheet" type="text/css" media="print">
</head>
<body>

<h6>Easy Access to Favorite Folders -- by Savage</h6>

<p> When you click the middle mouse button while certain types of
 windows are active, this script displays a menu of your favorite
 folders.  Upon selecting a favorite, the script will instantly
 switch to that folder within the active window.  The following
 window types are supported: 1) Standard file-open or file-save
 dialogs; 2) Explorer windows; 3) Console (command prompt) windows.
 The menu can also be optionally shown for unsupported window
 types, in which case the chosen favorite will be opened as a new
 Explorer window.
</p>
<p><a href="FavoriteFolders.ahk">Download This Script</a> &nbsp;| &nbsp;<a href="index.htm">Other Sample Scripts</a> &nbsp;| &nbsp;<a href="http://www.autohotkey.com">Home</a></p>
<hr>
<pre class="NoIndent"><span class="CodeCom">; Note: In Windows Explorer, if &quot;View &gt; Toolbars &gt; Address Bar&quot; is</span>
<span class="CodeCom">; not enabled, the menu will not be shown if the hotkey chosen below</span>
<span class="CodeCom">; has a tilde.  If it does have a tilde, the menu will be shown</span>
<span class="CodeCom">; but the favorite will be opened in a new Explorer window rather</span>
<span class="CodeCom">; than switching the active Explorer window to that folder.</span>

<span class="CodeCom">; CONFIG: CHOOSE YOUR HOTKEY</span>
<span class="CodeCom">; If your mouse has more than 3 buttons, you could try using</span>
<span class="CodeCom">; XButton1 (the 4th) or XButton2 (the 5th) instead of MButton.</span>
<span class="CodeCom">; You could also use a modified mouse button (such as ^MButton) or</span>
<span class="CodeCom">; a keyboard hotkey.  In the case of MButton, the tilde (~) prefix</span>
<span class="CodeCom">; is used so that MButton's normal functionality is not lost when</span>
<span class="CodeCom">; you click in other window types, such as a browser.  The presence</span>
<span class="CodeCom">; of a tilde tells the script to avoid showing the menu for</span>
<span class="CodeCom">; unsupported window types.  In other words, if there is no tilde,</span>
<span class="CodeCom">; the hotkey will always display the menu; and upon selecting a</span>
<span class="CodeCom">; favorite while an unsupported window type is active, a new</span>
<span class="CodeCom">; Explorer window will be opened to display the contents of that</span>
<span class="CodeCom">; folder.</span>
f_Hotkey = ~MButton

<span class="CodeCom">; CONFIG: CHOOSE YOUR FAVORITES</span>
<span class="CodeCom">; Update the special commented section below to list your favorite</span>
<span class="CodeCom">; folders.  Specify the name of the menu item first, followed by a</span>
<span class="CodeCom">; semicolon, followed by the name of the actual path of the favorite.</span>
<span class="CodeCom">; Use a blank line to create a separator line.</span>

<span class="CodeCom">/*
ITEMS IN FAVORITES MENU &lt;-- Do not change this string.
Desktop      <span class="CodeCom">; %A_Desktop%</span>
Favorites    <span class="CodeCom">; %A_Desktop%\..\Favorites</span>
My Documents <span class="CodeCom">; %A_MyDocuments%</span>

Program Files; %A_ProgramFiles%
*/</span>


<span class="CodeCom">; END OF CONFIGURATION SECTION</span>
<span class="CodeCom">; Do not make changes below this point unless you want to change</span>
<span class="CodeCom">; the basic functionality of the script.</span>

#SingleInstance  <span class="CodeCom">; Needed since the hotkey is dynamically created.</span>

Hotkey, %f_Hotkey%, f_DisplayMenu
StringLeft, f_HotkeyFirstChar, f_Hotkey, 1
if f_HotkeyFirstChar = ~  <span class="CodeCom">; Show menu only for certain window types.</span>
    f_AlwaysShowMenu = n
else
    f_AlwaysShowMenu = y

<span class="CodeCom">; Used to reliably determine whether script is compiled:</span>
SplitPath, A_ScriptName,,, f_FileExt
if f_FileExt = Exe  <span class="CodeCom">; Read the menu items from an external file.</span>
    f_FavoritesFile = %A_ScriptDir%\Favorites.ini
else  <span class="CodeCom">; Read the menu items directly from this script file.</span>
    f_FavoritesFile = %A_ScriptFullPath%

<span class="CodeCom">;----Read the configuration file.</span>
f_AtStartingPos = n
f_MenuItemCount = 0
Loop, Read, %f_FavoritesFile%
{
    if f_FileExt &lt;&gt; Exe
    {
        <span class="CodeCom">; Since the menu items are being read directly from this</span>
        <span class="CodeCom">; script, skip over all lines until the starting line is</span>
        <span class="CodeCom">; arrived at.</span>
        if f_AtStartingPos = n
        {
            IfInString, A_LoopReadLine, ITEMS IN FAVORITES MENU
                f_AtStartingPos = y
            continue  <span class="CodeCom">; Start a new loop iteration.</span>
        }
        <span class="CodeCom">; Otherwise, the closing comment symbol marks the end of the list.</span>
        if A_LoopReadLine = */
            break  <span class="CodeCom">; terminate the loop</span>
    }
    <span class="CodeCom">; Menu separator lines must also be counted to be compatible</span>
    <span class="CodeCom">; with A_ThisMenuItemPos:</span>
    f_MenuItemCount++
    if A_LoopReadLine =  <span class="CodeCom">; Blank indicates a separator line.</span>
        Menu, Favorites, Add
    else
    {
        StringSplit, f_line, A_LoopReadLine, `;
        f_line1 = %f_line1%  <span class="CodeCom">; Trim leading and trailing spaces.</span>
        f_line2 = %f_line2%  <span class="CodeCom">; Trim leading and trailing spaces.</span>
        <span class="CodeCom">; Resolve any references to variables within either field, and</span>
        <span class="CodeCom">; create a new array element containing the path of this favorite:</span>
        Transform, f_path%f_MenuItemCount%, deref, %f_line2%
        Transform, f_line1, deref, %f_line1%
        Menu, Favorites, Add, %f_line1%, f_OpenFavorite
    }
}
return  <span class="CodeCom">;----End of auto-execute section.</span>


<span class="CodeCom">;----Open the selected favorite</span>
f_OpenFavorite:
<span class="CodeCom">; Fetch the array element that corresponds to the selected menu item:</span>
StringTrimLeft, f_path, f_path%A_ThisMenuItemPos%, 0
if f_path =
    return
if f_class = #32770    <span class="CodeCom">; It's a dialog.</span>
{
    if f_Edit1Pos &lt;&gt;   <span class="CodeCom">; And it has an Edit1 control.</span>
    {
        <span class="CodeCom">; Activate the window so that if the user is middle-clicking</span>
        <span class="CodeCom">; outside the dialog, subsequent clicks will also work:</span>
        WinActivate ahk_id %f_window_id%
        <span class="CodeCom">; Retrieve any filename that might already be in the field so</span>
        <span class="CodeCom">; that it can be restored after the switch to the new folder:</span>
        ControlGetText, f_text, Edit1, ahk_id %f_window_id%
        ControlSetText, Edit1, %f_path%, ahk_id %f_window_id%
        ControlSend, Edit1, {Enter}, ahk_id %f_window_id%
        Sleep, 100  <span class="CodeCom">; It needs extra time on some dialogs or in some cases.</span>
        ControlSetText, Edit1, %f_text%, ahk_id %f_window_id%
        return
    }
    <span class="CodeCom">; else fall through to the bottom of the subroutine to take standard action.</span>
}
else if f_class in ExploreWClass,CabinetWClass  <span class="CodeCom">; In Explorer, switch folders.</span>
{
    if f_Edit1Pos &lt;&gt;   <span class="CodeCom">; And it has an Edit1 control.</span>
    {
        ControlSetText, Edit1, %f_path%, ahk_id %f_window_id%
        <span class="CodeCom">; Tekl reported the following: &quot;If I want to change to Folder L:\folder</span>
        <span class="CodeCom">; then the addressbar shows http://www.L:\folder.com. To solve this,</span>
        <span class="CodeCom">; I added a {right} before {Enter}&quot;:</span>
        ControlSend, Edit1, {Right}{Enter}, ahk_id %f_window_id%
        return
    }
    <span class="CodeCom">; else fall through to the bottom of the subroutine to take standard action.</span>
}
else if f_class = ConsoleWindowClass <span class="CodeCom">; In a console window, CD to that directory</span>
{
    WinActivate, ahk_id %f_window_id% <span class="CodeCom">; Because sometimes the mclick deactivates it.</span>
    SetKeyDelay, 0  <span class="CodeCom">; This will be in effect only for the duration of this thread.</span>
    IfInString, f_path, :  <span class="CodeCom">; It contains a drive letter</span>
    {
        StringLeft, f_path_drive, f_path, 1
        Send %f_path_drive%:{enter}
    }
    Send, cd %f_path%{Enter}
    return
}
<span class="CodeCom">; Since the above didn't return, one of the following is true:</span>
<span class="CodeCom">; 1) It's an unsupported window type but f_AlwaysShowMenu is y (yes).</span>
<span class="CodeCom">; 2) It's a supported type but it lacks an Edit1 control to facilitate the custom</span>
<span class="CodeCom">;    action, so instead do the default action below.</span>
Run, Explorer %f_path%  <span class="CodeCom">; Might work on more systems without double quotes.</span>
return


<span class="CodeCom">;----Display the menu</span>
f_DisplayMenu:
<span class="CodeCom">; These first few variables are set here and used by f_OpenFavorite:</span>
WinGet, f_window_id, ID, A
WinGetClass, f_class, ahk_id %f_window_id%
if f_class in #32770,ExploreWClass,CabinetWClass  <span class="CodeCom">; Dialog or Explorer.</span>
    ControlGetPos, f_Edit1Pos,,,, Edit1, ahk_id %f_window_id%
if f_AlwaysShowMenu = n  <span class="CodeCom">; The menu should be shown only selectively.</span>
{
    if f_class in #32770,ExploreWClass,CabinetWClass  <span class="CodeCom">; Dialog or Explorer.</span>
    {
        if f_Edit1Pos =  <span class="CodeCom">; The control doesn't exist, so don't display the menu</span>
            return
    }
    else if f_class &lt;&gt; ConsoleWindowClass
        return <span class="CodeCom">; Since it's some other window type, don't display menu.</span>
}
<span class="CodeCom">; Otherwise, the menu should be presented for this type of window:</span>
Menu, Favorites, show
return
</pre>
</body>
</html>
